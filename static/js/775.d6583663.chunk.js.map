{"version":3,"file":"static/js/775.d6583663.chunk.js","mappings":"8NAQAA,EAAAA,EAAAA,iBAAmC,MAAOC,EAAAA,GAanC,IAAMC,EAA8B,SAA9BA,SAA+B,GAAkB,IAAhBC,EAAe,EAAfA,SAC5C,OACE,gBAAKC,UAAU,wDAAf,SACGD,EAASE,KAAI,WAAyDC,GAAzD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,uBAA/B,OACZ,iBAAiBN,UAAU,sBAA3B,WACE,iBAAMA,UAAU,qBAAhB,SAAsCG,KACtC,UAAC,KAAD,CAAMH,UAAWK,EAAjB,UACGD,GACD,SAAC,IAAD,CAAmBG,SAAS,MAAMC,MAAOC,EAAAA,EAAzC,UACGC,EAAAA,EAAAA,IAAwBN,GAAD,QACtBO,eAAe,EACfC,cAAe,uBAACC,GAAD,OAAQA,EAAGC,MAC1BC,WAAW,EACXC,2BAA2B,EAC3BC,wBAAwB,GACrBX,WAXDJ,U,6DCsElB,UA1FyB,SAAnBgB,eACJ,IAAMnB,EAA0B,CAC9B,CACEI,MAAO,iBACPC,MACE,SAAC,IAAD,CAASe,QAAQ,kBAAjB,UACE,SAAC,KAAD,iCAIN,CACEhB,MAAO,iBACPC,MACE,iBAAKJ,UAAU,aAAf,WACE,SAAC,IAAD,CAASmB,QAAQ,kBAAkBX,MAAM,QAAzC,UACE,SAAC,KAAD,+BAEF,SAAC,IAAD,CAASW,QAAQ,kBAAkBX,MAAM,OAAzC,UACE,SAAC,KAAD,iCAKR,CACEL,MAAO,YACPC,MACE,iBAAKJ,UAAU,aAAf,WACE,SAAC,IAAD,CAASmB,QAAQ,kBAAkBC,UAAU,MAA7C,UACE,SAAC,KAAD,6BAEF,SAAC,IAAD,CAASD,QAAQ,kBAAkBC,UAAU,QAA7C,UACE,SAAC,KAAD,+BAEF,SAAC,IAAD,CAASD,QAAQ,kBAAkBC,UAAU,SAA7C,UACE,SAAC,KAAD,gCAEF,SAAC,IAAD,CAASD,QAAQ,kBAAkBC,UAAU,OAA7C,UACE,SAAC,KAAD,iCAKR,CACEjB,MAAO,aACPC,MACE,iBAAKJ,UAAU,aAAf,WACE,SAAC,IAAD,CAASmB,QAAQ,kBAAkBE,QAAQ,QAA3C,UACE,SAAC,KAAD,+BAEF,SAAC,IAAD,CAASF,QAAQ,kBAAkBE,QAAQ,QAA3C,UACE,SAAC,KAAD,kCAKR,CACElB,MAAO,YACPC,MACE,iBAAKJ,UAAU,aAAf,WACE,SAAC,IAAD,CAASmB,QAAQ,kBAAkBG,WAAW,EAA9C,UACE,SAAC,KAAD,sCAEF,SAAC,IAAD,CAASH,QAAQ,kBAAkBG,UAAU,eAA7C,UACE,SAAC,KAAD,gCAEF,SAAC,IAAD,CAASH,QAAQ,kBAAkBG,UAAU,eAA7C,UACE,SAAC,KAAD,wCAEF,SAAC,IAAD,CAASH,QAAQ,kBAAkBG,UAAU,eAA7C,UACE,SAAC,KAAD,gCAEF,SAAC,IAAD,CAASH,QAAQ,kBAAkBG,UAAU,gBAA7C,UACE,SAAC,KAAD,0CAKR,CACEnB,MAAO,gBACPC,MACE,SAAC,IAAD,CAASe,QAAQ,kBAAkBI,OAAO,EAA1C,UACE,SAAC,KAAD,kCAMR,OAAO,SAAC,IAAD,CAAUxB,SAAUA","sources":["pages/DemoPage.tsx","pages/TooltipsPage.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\nimport reactElementToJSXString, { Options } from 'react-element-to-jsx-string';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\n\nimport { Card } from '../components';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nexport type CodeExample = {\n  title: string;\n  code: ReactNode;\n  codeClassName?: string;\n  codeStringifierOptions?: Options;\n};\n\nexport type DemoPageProps = {\n  examples: CodeExample[];\n};\n\nexport const DemoPage: FC<DemoPageProps> = ({ examples }) => {\n  return (\n    <div className=\"mx-auto flex max-w-4xl flex-col gap-8 dark:text-white\">\n      {examples.map(({ title, code, codeClassName, codeStringifierOptions }, index) => (\n        <div key={index} className=\"flex flex-col gap-2\">\n          <span className=\"text-2xl font-bold\">{title}</span>\n          <Card className={codeClassName}>\n            {code}\n            <SyntaxHighlighter language=\"tsx\" style={dracula}>\n              {reactElementToJSXString(code, {\n                showFunctions: true,\n                functionValue: (fn) => fn.name,\n                sortProps: false,\n                useBooleanShorthandSyntax: false,\n                useFragmentShortSyntax: false,\n                ...codeStringifierOptions,\n              })}\n            </SyntaxHighlighter>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nimport { Button, Tooltip } from '../components';\nimport { CodeExample, DemoPage } from './DemoPage';\n\nconst TooltipsPage: FC = () => {\n  const examples: CodeExample[] = [\n    {\n      title: 'Using tooltips',\n      code: (\n        <Tooltip content=\"Tooltip content\">\n          <Button>Default tooltip</Button>\n        </Tooltip>\n      ),\n    },\n    {\n      title: 'Tooltip styles',\n      code: (\n        <div className=\"flex gap-2\">\n          <Tooltip content=\"Tooltip content\" style=\"light\">\n            <Button>Light tooltip</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" style=\"dark\">\n            <Button>Dark tooltip</Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n    {\n      title: 'Placement',\n      code: (\n        <div className=\"flex gap-2\">\n          <Tooltip content=\"Tooltip content\" placement=\"top\">\n            <Button>Tooltip top</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" placement=\"right\">\n            <Button>Tooltip right</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" placement=\"bottom\">\n            <Button>Tooltip bottom</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" placement=\"left\">\n            <Button>Tooltip left</Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n    {\n      title: 'Triggering',\n      code: (\n        <div className=\"flex gap-2\">\n          <Tooltip content=\"Tooltip content\" trigger=\"hover\">\n            <Button>Tooltip hover</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" trigger=\"click\">\n            <Button>Tooltip click</Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n    {\n      title: 'Animation',\n      code: (\n        <div className=\"flex gap-2\">\n          <Tooltip content=\"Tooltip content\" animation={false}>\n            <Button>Not animated tooltip</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" animation=\"duration-150\">\n            <Button>Fast animation</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" animation=\"duration-300\">\n            <Button>Normal speed animation</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" animation=\"duration-500\">\n            <Button>Slow animation</Button>\n          </Tooltip>\n          <Tooltip content=\"Tooltip content\" animation=\"duration-1000\">\n            <Button>Really slow animation</Button>\n          </Tooltip>\n        </div>\n      ),\n    },\n    {\n      title: 'Disable arrow',\n      code: (\n        <Tooltip content=\"Tooltip content\" arrow={false}>\n          <Button>Default tooltip</Button>\n        </Tooltip>\n      ),\n    },\n  ];\n\n  return <DemoPage examples={examples} />;\n};\n\nexport default TooltipsPage;\n"],"names":["SyntaxHighlighter","tsx","DemoPage","examples","className","map","index","title","code","codeClassName","codeStringifierOptions","language","style","dracula","reactElementToJSXString","showFunctions","functionValue","fn","name","sortProps","useBooleanShorthandSyntax","useFragmentShortSyntax","TooltipsPage","content","placement","trigger","animation","arrow"],"sourceRoot":""}