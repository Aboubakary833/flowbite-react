{"version":3,"file":"static/js/350.a3502ea2.chunk.js","mappings":"uKAkCA,UA5B2B,WACzB,IAAMA,EAA0B,CAC9B,CACEC,MAAO,qBACPC,MACE,SAAC,KAAD,CACEC,MAAO,CACL,CACEC,KAAMC,EAAAA,IACNC,MAAO,OACPC,KAAM,gBAER,CACED,MAAO,WACPC,KAAM,gBAER,CACED,MAAO,uBAQnB,OAAO,SAAC,IAAD,CAAUN,SAAUA,M,8HCvB7BQ,EAAAA,EAAAA,iBAAmC,MAAOC,EAAAA,GAanC,IAAMC,EAA8B,SAAC,GAAkB,IAAhBV,EAAe,EAAfA,SAC5C,OACE,gBAAKW,UAAU,wDAAf,SACGX,EAASY,KAAI,WAAyDC,GAAzD,IAAGZ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMY,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,uBAA/B,OACZ,iBAAiBJ,UAAU,sBAA3B,WACE,iBAAMA,UAAU,qBAAhB,SAAsCV,KACtC,UAAC,KAAD,CAAMU,UAAWG,EAAjB,UACGZ,GACD,SAAC,IAAD,CAAmBc,SAAS,MAAMC,MAAOC,EAAAA,EAAzC,UACGC,EAAAA,EAAAA,IAAwBjB,GAAD,QACtBkB,eAAe,EACfC,cAAe,SAACC,GAAD,OAAQA,EAAGC,MAC1BC,WAAW,EACXC,2BAA2B,EAC3BC,wBAAwB,GACrBX,WAXDF","sources":["pages/BreadcrumbPage.tsx","pages/DemoPage.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { HiHome } from 'react-icons/hi';\n\nimport { Breadcrumb } from '../components';\nimport { CodeExample, DemoPage } from './DemoPage';\n\nconst BreadcrumbPage: FC = () => {\n  const examples: CodeExample[] = [\n    {\n      title: 'Default breadcrumb',\n      code: (\n        <Breadcrumb\n          items={[\n            {\n              icon: HiHome,\n              label: 'Home',\n              href: '#/breadcrumb',\n            },\n            {\n              label: 'Projects',\n              href: '#/breadcrumb',\n            },\n            {\n              label: 'Flowbite React',\n            },\n          ]}\n        />\n      ),\n    },\n  ];\n\n  return <DemoPage examples={examples} />;\n};\n\nexport default BreadcrumbPage;\n","import { FC, ReactNode } from 'react';\nimport reactElementToJSXString, { Options } from 'react-element-to-jsx-string';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\n\nimport { Card } from '../components';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nexport type CodeExample = {\n  title: string;\n  code: ReactNode;\n  codeClassName?: string;\n  codeStringifierOptions?: Options;\n};\n\nexport type DemoPageProps = {\n  examples: CodeExample[];\n};\n\nexport const DemoPage: FC<DemoPageProps> = ({ examples }) => {\n  return (\n    <div className=\"flex flex-col max-w-4xl mx-auto gap-4 dark:text-white\">\n      {examples.map(({ title, code, codeClassName, codeStringifierOptions }, index) => (\n        <div key={index} className=\"flex flex-col gap-2\">\n          <span className=\"text-2xl font-bold\">{title}</span>\n          <Card className={codeClassName}>\n            {code}\n            <SyntaxHighlighter language=\"tsx\" style={dracula}>\n              {reactElementToJSXString(code, {\n                showFunctions: true,\n                functionValue: (fn) => fn.name,\n                sortProps: false,\n                useBooleanShorthandSyntax: false,\n                useFragmentShortSyntax: false,\n                ...codeStringifierOptions,\n              })}\n            </SyntaxHighlighter>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"names":["examples","title","code","items","icon","HiHome","label","href","SyntaxHighlighter","tsx","DemoPage","className","map","index","codeClassName","codeStringifierOptions","language","style","dracula","reactElementToJSXString","showFunctions","functionValue","fn","name","sortProps","useBooleanShorthandSyntax","useFragmentShortSyntax"],"sourceRoot":""}