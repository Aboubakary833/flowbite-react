{"version":3,"file":"static/js/526.14f9a7dc.chunk.js","mappings":"uKA4FA,UAtFuB,WACrB,IAAMA,EAA0B,CAC9B,CACEC,MAAO,gBACPC,MACE,iBAAKC,UAAU,uBAAf,WACE,SAAC,KAAD,CAAOC,MAAM,OAAb,sBACA,SAAC,KAAD,CAAOA,MAAM,OAAb,mBACA,SAAC,KAAD,CAAOA,MAAM,MAAb,kBACA,SAAC,KAAD,CAAOA,MAAM,QAAb,oBACA,SAAC,KAAD,CAAOA,MAAM,SAAb,qBACA,SAAC,KAAD,CAAOA,MAAM,SAAb,qBACA,SAAC,KAAD,CAAOA,MAAM,SAAb,qBACA,SAAC,KAAD,CAAOA,MAAM,OAAb,sBAIN,CACEH,MAAO,cACPC,MACE,iBAAKC,UAAU,uBAAf,WACE,SAAC,KAAD,CAAOC,MAAM,OAAOC,KAAK,KAAzB,sBAGA,SAAC,KAAD,CAAOD,MAAM,OAAOC,KAAK,KAAzB,mBAGA,SAAC,KAAD,CAAOD,MAAM,MAAMC,KAAK,KAAxB,kBAGA,SAAC,KAAD,CAAOD,MAAM,QAAQC,KAAK,KAA1B,oBAGA,SAAC,KAAD,CAAOD,MAAM,SAASC,KAAK,KAA3B,qBAGA,SAAC,KAAD,CAAOD,MAAM,SAASC,KAAK,KAA3B,qBAGA,SAAC,KAAD,CAAOD,MAAM,SAASC,KAAK,KAA3B,qBAGA,SAAC,KAAD,CAAOD,MAAM,OAAOC,KAAK,KAAzB,sBAMN,CACEJ,MAAO,kBACPC,MACE,iBAAKC,UAAU,oCAAf,WACE,SAAC,KAAD,CAAOG,KAAK,WAAZ,sBACA,SAAC,KAAD,CAAOD,KAAK,KAAKC,KAAK,WAAtB,yBAMN,CACEL,MAAO,mBACPC,MACE,iBAAKC,UAAU,uBAAf,WACE,SAAC,KAAD,CAAOI,KAAMC,EAAAA,IAAb,4BACA,SAAC,KAAD,CAAOJ,MAAM,OAAOG,KAAME,EAAAA,IAA1B,4BAMN,CACER,MAAO,uBACPC,MACE,iBAAKC,UAAU,oCAAf,WACE,SAAC,KAAD,CAAOI,KAAMC,EAAAA,OACb,SAAC,KAAD,CAAOJ,MAAM,OAAOG,KAAMC,EAAAA,OAC1B,SAAC,KAAD,CAAOH,KAAK,KAAKE,KAAMC,EAAAA,OACvB,SAAC,KAAD,CAAOJ,MAAM,OAAOC,KAAK,KAAKE,KAAMC,EAAAA,WAM5C,OAAO,SAAC,IAAD,CAAUR,SAAUA,M,8HCjF7BU,EAAAA,EAAAA,iBAAmC,MAAOC,EAAAA,GAanC,IAAMC,EAA8B,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAC5C,OACE,gBAAKG,UAAU,wDAAf,SACGH,EAASa,KAAI,WAAyDC,GAAzD,IAAGb,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMa,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,uBAA/B,OACZ,iBAAiBb,UAAU,sBAA3B,WACE,iBAAMA,UAAU,qBAAhB,SAAsCF,KACtC,UAAC,KAAD,CAAME,UAAWY,EAAjB,UACGb,GACD,SAAC,IAAD,CAAmBe,SAAS,MAAMC,MAAOC,EAAAA,EAAzC,UACGC,EAAAA,EAAAA,IAAwBlB,GAAD,QACtBmB,eAAe,EACfC,cAAe,SAACC,GAAD,OAAQA,EAAGC,MAC1BC,WAAW,EACXC,2BAA2B,EAC3BC,wBAAwB,GACrBX,WAXDF","sources":["pages/BadgesPage.tsx","pages/DemoPage.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { HiCheck, HiClock } from 'react-icons/hi';\n\nimport { Badge } from '../components';\nimport { CodeExample, DemoPage } from './DemoPage';\n\nconst BadgesPage: FC = () => {\n  const examples: CodeExample[] = [\n    {\n      title: 'Default badge',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge color=\"blue\">Default</Badge>\n          <Badge color=\"gray\">Dark</Badge>\n          <Badge color=\"red\">Red</Badge>\n          <Badge color=\"green\">Green</Badge>\n          <Badge color=\"yellow\">Yellow</Badge>\n          <Badge color=\"indigo\">Indigo</Badge>\n          <Badge color=\"purple\">Purple</Badge>\n          <Badge color=\"pink\">Pink</Badge>\n        </div>\n      ),\n    },\n    {\n      title: 'Large badge',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge color=\"blue\" size=\"sm\">\n            Default\n          </Badge>\n          <Badge color=\"gray\" size=\"sm\">\n            Dark\n          </Badge>\n          <Badge color=\"red\" size=\"sm\">\n            Red\n          </Badge>\n          <Badge color=\"green\" size=\"sm\">\n            Green\n          </Badge>\n          <Badge color=\"yellow\" size=\"sm\">\n            Yellow\n          </Badge>\n          <Badge color=\"indigo\" size=\"sm\">\n            Indigo\n          </Badge>\n          <Badge color=\"purple\" size=\"sm\">\n            Purple\n          </Badge>\n          <Badge color=\"pink\" size=\"sm\">\n            Pink\n          </Badge>\n        </div>\n      ),\n    },\n    {\n      title: 'Badges as links',\n      code: (\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <Badge href=\"#/badges\">Default</Badge>\n          <Badge size=\"sm\" href=\"#/badges\">\n            Default\n          </Badge>\n        </div>\n      ),\n    },\n    {\n      title: 'Badges with icon',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge icon={HiCheck}>2 minutes ago</Badge>\n          <Badge color=\"gray\" icon={HiClock}>\n            3 days ago\n          </Badge>\n        </div>\n      ),\n    },\n    {\n      title: 'Badge with icon only',\n      code: (\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <Badge icon={HiCheck} />\n          <Badge color=\"gray\" icon={HiCheck} />\n          <Badge size=\"sm\" icon={HiCheck} />\n          <Badge color=\"gray\" size=\"sm\" icon={HiCheck} />\n        </div>\n      ),\n    },\n  ];\n\n  return <DemoPage examples={examples} />;\n};\n\nexport default BadgesPage;\n","import { FC, ReactNode } from 'react';\nimport reactElementToJSXString, { Options } from 'react-element-to-jsx-string';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\n\nimport { Card } from '../components';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nexport type CodeExample = {\n  title: string;\n  code: ReactNode;\n  codeClassName?: string;\n  codeStringifierOptions?: Options;\n};\n\nexport type DemoPageProps = {\n  examples: CodeExample[];\n};\n\nexport const DemoPage: FC<DemoPageProps> = ({ examples }) => {\n  return (\n    <div className=\"flex flex-col max-w-4xl mx-auto gap-4 dark:text-white\">\n      {examples.map(({ title, code, codeClassName, codeStringifierOptions }, index) => (\n        <div key={index} className=\"flex flex-col gap-2\">\n          <span className=\"text-2xl font-bold\">{title}</span>\n          <Card className={codeClassName}>\n            {code}\n            <SyntaxHighlighter language=\"tsx\" style={dracula}>\n              {reactElementToJSXString(code, {\n                showFunctions: true,\n                functionValue: (fn) => fn.name,\n                sortProps: false,\n                useBooleanShorthandSyntax: false,\n                useFragmentShortSyntax: false,\n                ...codeStringifierOptions,\n              })}\n            </SyntaxHighlighter>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"names":["examples","title","code","className","color","size","href","icon","HiCheck","HiClock","SyntaxHighlighter","tsx","DemoPage","map","index","codeClassName","codeStringifierOptions","language","style","dracula","reactElementToJSXString","showFunctions","functionValue","fn","name","sortProps","useBooleanShorthandSyntax","useFragmentShortSyntax"],"sourceRoot":""}