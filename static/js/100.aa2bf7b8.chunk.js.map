{"version":3,"file":"static/js/100.aa2bf7b8.chunk.js","mappings":"8NAQAA,EAAAA,EAAAA,iBAAmC,MAAOC,EAAAA,GAanC,IAAMC,EAA8B,SAA9BA,SAA+B,GAAkB,IAAhBC,EAAe,EAAfA,SAC5C,OACE,gBAAKC,UAAU,wDAAf,SACGD,EAASE,KAAI,WAAyDC,GAAzD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,uBAA/B,OACZ,iBAAiBN,UAAU,sBAA3B,WACE,iBAAMA,UAAU,qBAAhB,SAAsCG,KACtC,UAAC,KAAD,CAAMH,UAAWK,EAAjB,UACGD,GACD,SAAC,IAAD,CAAmBG,SAAS,MAAMC,MAAOC,EAAAA,EAAzC,UACGC,EAAAA,EAAAA,IAAwBN,GAAD,QACtBO,eAAe,EACfC,cAAe,uBAACC,GAAD,OAAQA,EAAGC,MAC1BC,WAAW,EACXC,2BAA2B,EAC3BC,wBAAwB,GACrBX,WAXDJ,U,4GCVLgB,EAAgC,SAAhCA,UAAiC,GAAe,IAAbC,EAAY,EAAZA,MAC9C,OACE,gBAAKnB,UAAU,kMAAf,SACGmB,EAAMlB,KAAI,SAACmB,EAAMlB,GAAP,OACT,SAAC,EAAAmB,SAAD,UACID,EAAKE,MAgBL,cACEC,KAAMH,EAAKE,KACX,eAAa,QACbtB,UAAWwB,GAAAA,CACT,iHACA,CACE,0BAA2BJ,EAAKK,OAChC,sFAAuFL,EAAKK,SAPlG,SAWGL,EAAKjB,SA1BR,oBACEuB,QAASN,EAAKM,QACd1B,UAAWwB,GAAAA,CACT,8GACA,CACE,0BAA2BJ,EAAKK,OAChC,sFAAuFL,EAAKK,SAGhGE,KAAK,SATP,UAWGP,EAAKQ,OAAQ,SAACR,EAAKQ,KAAN,IACbR,EAAKjB,UAdGD,S,oBCmEvB,EAjF0B,SAApB2B,gBACJ,IAeMC,EAAkC,CACtC,CACE3B,MAAO,UACPmB,KAAM,eACNG,QAAQ,GAEV,CACEtB,MAAO,WACPmB,KAAM,gBAER,CACEnB,MAAO,WACPmB,KAAM,gBAER,CACEnB,MAAO,WACPmB,KAAM,iBAIJS,EAAkC,CACtC,CACE5B,MAAO,UACPyB,KAAMI,EAAAA,IACNN,QAAS,0BAAMO,MAAM,aAEvB,CACE9B,MAAO,WACPyB,KAAMM,EAAAA,KAER,CACE/B,MAAO,WACPyB,KAAMO,EAAAA,KAER,CACEhC,MAAO,WACPyB,KAAMQ,EAAAA,MAIJrC,EAA0B,CAC9B,CACEI,MAAO,eACPC,MAAM,SAACc,EAAD,CAAWC,MA1DiB,CACpC,CACEhB,MAAO,WAET,CACEA,MAAO,YAET,CACEA,MAAO,YAET,CACEA,MAAO,gBAiDT,CACEA,MAAO,wBACPC,MAAM,SAACc,EAAD,CAAWC,MAAOW,KAE1B,CACE3B,MAAO,0BACPC,MAAM,SAACc,EAAD,CAAWC,MAAOW,KAE1B,CACE3B,MAAO,wBACPC,MAAM,SAACc,EAAD,CAAWC,MAAOY,IACxBzB,uBAAwB,CACtBM,cAAe,uBAACC,GAAD,MAAqB,YAAZA,EAAGC,KAAqBD,EAAKA,EAAGC,SAK9D,OAAO,SAAChB,EAAA,EAAD,CAAUC,SAAUA","sources":["pages/DemoPage.tsx","components/ListGroup.tsx","pages/ListGroupPage.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\nimport reactElementToJSXString, { Options } from 'react-element-to-jsx-string';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\n\nimport { Card } from '../components';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nexport type CodeExample = {\n  title: string;\n  code: ReactNode;\n  codeClassName?: string;\n  codeStringifierOptions?: Options;\n};\n\nexport type DemoPageProps = {\n  examples: CodeExample[];\n};\n\nexport const DemoPage: FC<DemoPageProps> = ({ examples }) => {\n  return (\n    <div className=\"mx-auto flex max-w-4xl flex-col gap-8 dark:text-white\">\n      {examples.map(({ title, code, codeClassName, codeStringifierOptions }, index) => (\n        <div key={index} className=\"flex flex-col gap-2\">\n          <span className=\"text-2xl font-bold\">{title}</span>\n          <Card className={codeClassName}>\n            {code}\n            <SyntaxHighlighter language=\"tsx\" style={dracula}>\n              {reactElementToJSXString(code, {\n                showFunctions: true,\n                functionValue: (fn) => fn.name,\n                sortProps: false,\n                useBooleanShorthandSyntax: false,\n                useFragmentShortSyntax: false,\n                ...codeStringifierOptions,\n              })}\n            </SyntaxHighlighter>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { ComponentProps, FC, Fragment, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nexport type ListGroupProps = {\n  items: ListGroupItem[];\n};\nexport type ListGroupItem = {\n  title: ReactNode;\n  link?: string;\n  icon?: FC<ComponentProps<'svg'>>;\n  active?: boolean;\n  onClick?: () => void;\n  disabled?: boolean;\n};\n\nexport const ListGroup: FC<ListGroupProps> = ({ items }) => {\n  return (\n    <div className=\"w-48 list-none divide-y divide-gray-200 rounded-lg border border-gray-200 bg-white text-sm font-medium text-gray-900 dark:divide-gray-600 dark:border-gray-600 dark:bg-gray-700 dark:text-white\">\n      {items.map((item, index) => (\n        <Fragment key={index}>\n          {!item.link ? (\n            <button\n              onClick={item.onClick}\n              className={classNames(\n                'flex w-full items-center gap-2 py-2 px-4 text-left text-sm font-medium first:rounded-t-lg last:rounded-b-lg',\n                {\n                  '!bg-blue-700 text-white': item.active,\n                  'hover:bg-gray-100 hover:text-blue-700 dark:hover:bg-gray-600 dark:hover:text-white': !item.active,\n                },\n              )}\n              type=\"button\"\n            >\n              {item.icon && <item.icon />}\n              {item.title}\n            </button>\n          ) : (\n            <a\n              href={item.link}\n              aria-current=\"false\"\n              className={classNames(\n                'block w-full cursor-pointer py-2 px-4 first:rounded-t-lg last:rounded-b-lg focus:outline-none dark:bg-gray-800',\n                {\n                  '!bg-blue-700 text-white': item.active,\n                  'hover:bg-gray-100 hover:text-blue-700 dark:hover:bg-gray-600 dark:hover:text-white': !item.active,\n                },\n              )}\n            >\n              {item.title}\n            </a>\n          )}\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { ListGroup, ListGroupItem } from '../components/ListGroup';\nimport { CodeExample, DemoPage } from './DemoPage';\nimport { HiCloudDownload, HiInbox, HiOutlineAdjustments, HiUserCircle } from 'react-icons/hi';\n\nconst ListGroupPage: FC = () => {\n  const defaultItems: ListGroupItem[] = [\n    {\n      title: 'Profile',\n    },\n    {\n      title: 'Settings',\n    },\n    {\n      title: 'Messages',\n    },\n    {\n      title: 'Download',\n    },\n  ];\n\n  const itemsWithLinks: ListGroupItem[] = [\n    {\n      title: 'Profile',\n      link: '#/list-group',\n      active: true,\n    },\n    {\n      title: 'Settings',\n      link: '#/list-group',\n    },\n    {\n      title: 'Messages',\n      link: '#/list-group',\n    },\n    {\n      title: 'Download',\n      link: '#/list-group',\n    },\n  ];\n\n  const itemsWithIcons: ListGroupItem[] = [\n    {\n      title: 'Profile',\n      icon: HiUserCircle,\n      onClick: () => alert('profile'),\n    },\n    {\n      title: 'Settings',\n      icon: HiOutlineAdjustments,\n    },\n    {\n      title: 'Messages',\n      icon: HiInbox,\n    },\n    {\n      title: 'Download',\n      icon: HiCloudDownload,\n    },\n  ];\n\n  const examples: CodeExample[] = [\n    {\n      title: 'Default list',\n      code: <ListGroup items={defaultItems} />,\n    },\n    {\n      title: 'List group with links',\n      code: <ListGroup items={itemsWithLinks} />,\n    },\n    {\n      title: 'List group with buttons',\n      code: <ListGroup items={itemsWithLinks} />,\n    },\n    {\n      title: 'List group with icons',\n      code: <ListGroup items={itemsWithIcons} />,\n      codeStringifierOptions: {\n        functionValue: (fn) => (fn.name === 'onClick' ? fn : fn.name),\n      },\n    },\n  ];\n\n  return <DemoPage examples={examples} />;\n};\n\nexport default ListGroupPage;\n"],"names":["SyntaxHighlighter","tsx","DemoPage","examples","className","map","index","title","code","codeClassName","codeStringifierOptions","language","style","dracula","reactElementToJSXString","showFunctions","functionValue","fn","name","sortProps","useBooleanShorthandSyntax","useFragmentShortSyntax","ListGroup","items","item","Fragment","link","href","classNames","active","onClick","type","icon","ListGroupPage","itemsWithLinks","itemsWithIcons","HiUserCircle","alert","HiOutlineAdjustments","HiInbox","HiCloudDownload"],"sourceRoot":""}