{"version":3,"file":"static/js/643.f1ed7679.chunk.js","mappings":"6NAQAA,EAAAA,EAAAA,iBAAmC,MAAOC,EAAAA,GAanC,IAAMC,EAA8B,SAA9BA,SAA+B,GAAkB,IAAhBC,EAAe,EAAfA,SAC5C,OACE,gBAAKC,UAAU,wDAAf,SACGD,EAASE,KAAI,WAAyDC,GAAzD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,uBAA/B,OACZ,iBAAiBN,UAAU,sBAA3B,WACE,iBAAMA,UAAU,qBAAhB,SAAsCG,KACtC,UAAC,KAAD,CAAMH,UAAWK,EAAjB,UACGD,GACD,SAAC,IAAD,CAAmBG,SAAS,MAAMC,MAAOC,EAAAA,EAAzC,UACGC,EAAAA,EAAAA,IAAwBN,GAAD,QACtBO,eAAe,EACfC,cAAe,uBAACC,GAAD,OAAQA,EAAGC,MAC1BC,WAAW,EACXC,2BAA2B,EAC3BC,wBAAwB,GACrBX,WAXDJ,U,2DCiClB,UArDyB,SAAnBgB,eACJ,IAAMnB,EAA0B,CAC9B,CACEI,MAAO,kBACPC,MAAM,SAAC,KAAD,KAER,CACED,MAAO,SACPC,MACE,iBAAKJ,UAAU,uBAAf,WACE,SAAC,KAAD,CAASmB,MAAM,UACf,SAAC,KAAD,CAASA,MAAM,UACf,SAAC,KAAD,CAASA,MAAM,WACf,SAAC,KAAD,CAASA,MAAM,SACf,SAAC,KAAD,CAASA,MAAM,YACf,SAAC,KAAD,CAASA,MAAM,UACf,SAAC,KAAD,CAASA,MAAM,eAIrB,CACEhB,MAAO,SACPC,MACE,iBAAKJ,UAAU,oCAAf,WACE,SAAC,KAAD,CAASoB,KAAK,QACd,SAAC,KAAD,CAASA,KAAK,QACd,SAAC,KAAD,CAASA,KAAK,QACd,SAAC,KAAD,CAASA,KAAK,QACd,SAAC,KAAD,CAASA,KAAK,WAIpB,CACEjB,MAAO,YACPC,MACE,iBAAKJ,UAAU,sBAAf,WACE,gBAAKA,UAAU,YAAf,UACE,SAAC,KAAD,OAEF,gBAAKA,UAAU,cAAf,UACE,SAAC,KAAD,OAEF,gBAAKA,UAAU,aAAf,UACE,SAAC,KAAD,WAOV,OAAO,SAAC,IAAD,CAAUD,SAAUA","sources":["pages/DemoPage.tsx","pages/SpinnersPage.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\nimport reactElementToJSXString, { Options } from 'react-element-to-jsx-string';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\n\nimport { Card } from '../components';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nexport type CodeExample = {\n  title: string;\n  code: ReactNode;\n  codeClassName?: string;\n  codeStringifierOptions?: Options;\n};\n\nexport type DemoPageProps = {\n  examples: CodeExample[];\n};\n\nexport const DemoPage: FC<DemoPageProps> = ({ examples }) => {\n  return (\n    <div className=\"mx-auto flex max-w-4xl flex-col gap-8 dark:text-white\">\n      {examples.map(({ title, code, codeClassName, codeStringifierOptions }, index) => (\n        <div key={index} className=\"flex flex-col gap-2\">\n          <span className=\"text-2xl font-bold\">{title}</span>\n          <Card className={codeClassName}>\n            {code}\n            <SyntaxHighlighter language=\"tsx\" style={dracula}>\n              {reactElementToJSXString(code, {\n                showFunctions: true,\n                functionValue: (fn) => fn.name,\n                sortProps: false,\n                useBooleanShorthandSyntax: false,\n                useFragmentShortSyntax: false,\n                ...codeStringifierOptions,\n              })}\n            </SyntaxHighlighter>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { FC } from 'react';\n\nimport { Spinner } from '../components';\nimport { CodeExample, DemoPage } from './DemoPage';\n\nconst SpinnersPage: FC = () => {\n  const examples: CodeExample[] = [\n    {\n      title: 'Default spinner',\n      code: <Spinner />,\n    },\n    {\n      title: 'Colors',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <Spinner color=\"blue\" />\n          <Spinner color=\"gray\" />\n          <Spinner color=\"green\" />\n          <Spinner color=\"red\" />\n          <Spinner color=\"yellow\" />\n          <Spinner color=\"pink\" />\n          <Spinner color=\"purple\" />\n        </div>\n      ),\n    },\n    {\n      title: 'Sizing',\n      code: (\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <Spinner size=\"xs\" />\n          <Spinner size=\"sm\" />\n          <Spinner size=\"md\" />\n          <Spinner size=\"lg\" />\n          <Spinner size=\"xl\" />\n        </div>\n      ),\n    },\n    {\n      title: 'Alignment',\n      code: (\n        <div className=\"flex flex-col gap-2\">\n          <div className=\"text-left\">\n            <Spinner />\n          </div>\n          <div className=\"text-center\">\n            <Spinner />\n          </div>\n          <div className=\"text-right\">\n            <Spinner />\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return <DemoPage examples={examples} />;\n};\n\nexport default SpinnersPage;\n"],"names":["SyntaxHighlighter","tsx","DemoPage","examples","className","map","index","title","code","codeClassName","codeStringifierOptions","language","style","dracula","reactElementToJSXString","showFunctions","functionValue","fn","name","sortProps","useBooleanShorthandSyntax","useFragmentShortSyntax","SpinnersPage","color","size"],"sourceRoot":""}