{"version":3,"file":"static/js/972.b5de1cc4.chunk.js","mappings":"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","sources":["pages/ButtonGroupPage.tsx","pages/DemoPage.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { HiAdjustments, HiCloudDownload, HiUserCircle } from 'react-icons/hi';\n\nimport { CodeExample, DemoPage } from './DemoPage';\nimport { Button, ButtonGroup } from '../components';\n\nconst ButtonGroupPage: FC = () => {\n  const examples: CodeExample[] = [\n    {\n      title: 'Default example',\n      code: (\n        <ButtonGroup>\n          <Button color=\"alternative\">Profile</Button>\n          <Button color=\"alternative\">Settings</Button>\n          <Button color=\"alternative\">Messages</Button>\n        </ButtonGroup>\n      ),\n    },\n    {\n      title: 'Group buttons with icons',\n      code: (\n        <ButtonGroup>\n          <Button color=\"alternative\">\n            <HiUserCircle className=\"mr-3 h-4 w-4\" /> Profile\n          </Button>\n          <Button color=\"alternative\">\n            <HiAdjustments className=\"mr-3 h-4 w-4\" /> Settings\n          </Button>\n          <Button color=\"alternative\">\n            <HiCloudDownload className=\"mr-3 h-4 w-4\" /> Messages\n          </Button>\n        </ButtonGroup>\n      ),\n    },\n    {\n      title: 'All colors',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <ButtonGroup>\n            <Button color=\"blue\">Profile</Button>\n            <Button color=\"blue\">Settings</Button>\n            <Button color=\"blue\">Messages</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button gradientMonochrome=\"blue\">Profile</Button>\n            <Button gradientMonochrome=\"blue\">Settings</Button>\n            <Button gradientMonochrome=\"blue\">Messages</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button gradientDuoTone=\"greenToBlue\">Profile</Button>\n            <Button gradientDuoTone=\"greenToBlue\">Settings</Button>\n            <Button gradientDuoTone=\"greenToBlue\">Messages</Button>\n          </ButtonGroup>\n        </div>\n      ),\n    },\n    {\n      title: 'Outline',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <ButtonGroup outline>\n            <Button color=\"alternative\">Profile</Button>\n            <Button color=\"alternative\">Settings</Button>\n            <Button color=\"alternative\">Messages</Button>\n          </ButtonGroup>\n          <ButtonGroup outline>\n            <Button gradientMonochrome=\"blue\">Profile</Button>\n            <Button gradientMonochrome=\"blue\">Settings</Button>\n            <Button gradientMonochrome=\"blue\">Messages</Button>\n          </ButtonGroup>\n          <ButtonGroup outline>\n            <Button gradientDuoTone=\"cyanToBlue\">Profile</Button>\n            <Button gradientDuoTone=\"cyanToBlue\">Settings</Button>\n            <Button gradientDuoTone=\"cyanToBlue\">Messages</Button>\n          </ButtonGroup>\n        </div>\n      ),\n    },\n    {\n      title: 'Outline with icons',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <ButtonGroup outline>\n            <Button color=\"alternative\">\n              <HiUserCircle className=\"mr-3 h-4 w-4\" /> Profile\n            </Button>\n            <Button color=\"alternative\">\n              <HiAdjustments className=\"mr-3 h-4 w-4\" /> Settings\n            </Button>\n            <Button color=\"alternative\">\n              <HiCloudDownload className=\"mr-3 h-4 w-4\" /> Messages\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup outline>\n            <Button gradientMonochrome=\"blue\">\n              <HiUserCircle className=\"mr-3 h-4 w-4\" /> Profile\n            </Button>\n            <Button gradientMonochrome=\"blue\">\n              <HiAdjustments className=\"mr-3 h-4 w-4\" /> Settings\n            </Button>\n            <Button gradientMonochrome=\"blue\">\n              <HiCloudDownload className=\"mr-3 h-4 w-4\" /> Messages\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup outline>\n            <Button gradientDuoTone=\"cyanToBlue\">\n              <HiUserCircle className=\"mr-3 h-4 w-4\" /> Profile\n            </Button>\n            <Button gradientDuoTone=\"cyanToBlue\">\n              <HiAdjustments className=\"mr-3 h-4 w-4\" /> Settings\n            </Button>\n            <Button gradientDuoTone=\"cyanToBlue\">\n              <HiCloudDownload className=\"mr-3 h-4 w-4\" /> Messages\n            </Button>\n          </ButtonGroup>\n        </div>\n      ),\n    },\n  ];\n\n  return <DemoPage examples={examples} />;\n};\n\nexport default ButtonGroupPage;\n","import { FC, ReactNode } from 'react';\nimport reactElementToJSXString, { Options } from 'react-element-to-jsx-string';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\n\nimport { Card } from '../components';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nexport type CodeExample = {\n  title: string;\n  code: ReactNode;\n  codeClassName?: string;\n  codeStringifierOptions?: Options;\n};\n\nexport type DemoPageProps = {\n  examples: CodeExample[];\n};\n\nexport const DemoPage: FC<DemoPageProps> = ({ examples }) => {\n  return (\n    <div className=\"mx-auto flex max-w-4xl flex-col gap-8 dark:text-white\">\n      {examples.map(({ title, code, codeClassName, codeStringifierOptions }, index) => (\n        <div key={index} className=\"flex flex-col gap-2\">\n          <span className=\"text-2xl font-bold\">{title}</span>\n          <Card className={codeClassName}>\n            {code}\n            <SyntaxHighlighter language=\"tsx\" style={dracula}>\n              {reactElementToJSXString(code, {\n                showFunctions: true,\n                functionValue: (fn) => fn.name,\n                sortProps: false,\n                useBooleanShorthandSyntax: false,\n                useFragmentShortSyntax: false,\n                ...codeStringifierOptions,\n              })}\n            </SyntaxHighlighter>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"names":["ButtonGroupPage","examples","title","code","color","className","gradientMonochrome","gradientDuoTone","outline","SyntaxHighlighter","tsx","DemoPage","map","index","codeClassName","codeStringifierOptions","language","style","dracula","reactElementToJSXString","showFunctions","functionValue","fn","name","sortProps","useBooleanShorthandSyntax","useFragmentShortSyntax"],"sourceRoot":""}