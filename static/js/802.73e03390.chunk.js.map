{"version":3,"file":"static/js/802.73e03390.chunk.js","mappings":"uKA+HA,UAzHuB,SAAjBA,aACJ,IAAMC,GACJ,6BACE,iBAAMC,UAAU,cAAhB,yBADF,uDAKIC,EAA0B,CAC9B,CACEC,MAAO,gBACPC,MAAM,SAAC,KAAD,CAAOC,MAAM,OAAb,SAAqBL,KAE7B,CACEG,MAAO,mBACPC,MACE,SAAC,KAAD,CAAOC,MAAM,MAAMC,KAAMC,EAAAA,IAAzB,SACGP,KAIP,CACEG,MAAO,qBACPC,MACE,SAAC,KAAD,CAAOC,MAAM,QAAQG,UAAW,4BAAMC,MAAM,qBAA5C,SACGT,IAGLU,uBAAwB,CAAEC,cAAe,uBAACC,GAAD,OAAQA,KAEnD,CACET,MAAO,UACPC,MACE,SAAC,KAAD,CAAOC,MAAM,SAASQ,SAAS,EAA/B,SACGb,KAIP,CACEG,MAAO,gBACPC,MACE,SAAC,KAAD,CAAOC,MAAM,SAASS,kBAAgB,EAAtC,SACGd,KAIP,CACEG,MAAO,qBACPC,MACE,SAAC,KAAD,CACEC,MAAM,OACNU,mBACE,iCACE,gBAAKd,UAAU,qDAAf,yLAIA,iBAAKA,UAAU,OAAf,WACE,oBACEe,KAAK,SACLf,UAAU,yMAFZ,WAIE,SAAC,MAAD,CAAOA,UAAU,yBAJnB,gBAOA,mBACEe,KAAK,SACLf,UAAU,+OAFZ,2BASNK,KAAMC,EAAAA,IAzBR,UA2BE,eAAIN,UAAU,uDAAd,qCAIN,CACEE,MAAO,cACPC,MACE,SAAC,KAAD,CACEC,MAAM,QACNQ,SAAS,EACTC,kBAAgB,EAChBN,UAAW,4BAAMC,MAAM,qBACvBM,mBACE,iCACE,gBAAKd,UAAU,uDAAf,yLAIA,iBAAKA,UAAU,OAAf,WACE,oBACEe,KAAK,SACLf,UAAU,8MAFZ,WAIE,SAAC,MAAD,CAAOA,UAAU,yBAJnB,gBAOA,mBACEe,KAAK,SACLf,UAAU,qPAFZ,2BASNK,KAAMC,EAAAA,IA5BR,UA8BE,eAAIN,UAAU,yDAAd,sCAMR,OAAO,SAAC,IAAD,CAAUC,SAAUA,M,8HCpH7Be,EAAAA,EAAAA,iBAAmC,MAAOC,EAAAA,GAanC,IAAMC,EAA8B,SAA9BA,SAA+B,GAAkB,IAAhBjB,EAAe,EAAfA,SAC5C,OACE,gBAAKD,UAAU,wDAAf,SACGC,EAASkB,KAAI,WAAyDC,GAAzD,IAAGlB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMkB,EAAhB,EAAgBA,cAAeZ,EAA/B,EAA+BA,uBAA/B,OACZ,iBAAiBT,UAAU,sBAA3B,WACE,iBAAMA,UAAU,qBAAhB,SAAsCE,KACtC,UAAC,KAAD,CAAMF,UAAWqB,EAAjB,UACGlB,GACD,SAAC,IAAD,CAAmBmB,SAAS,MAAMC,MAAOC,EAAAA,EAAzC,UACGC,EAAAA,EAAAA,IAAwBtB,GAAD,QACtBuB,eAAe,EACfhB,cAAe,uBAACC,GAAD,OAAQA,EAAGgB,MAC1BC,WAAW,EACXC,2BAA2B,EAC3BC,wBAAwB,GACrBrB,WAXDW","sources":["pages/AlertsPage.tsx","pages/DemoPage.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { HiEye, HiInformationCircle } from 'react-icons/hi';\n\nimport { Alert } from '../components';\nimport { CodeExample, DemoPage } from './DemoPage';\n\nconst AlertsPage: FC = () => {\n  const alertText = (\n    <span>\n      <span className=\"font-medium\">Info alert!</span> Change a few things up and try submitting again.\n    </span>\n  );\n\n  const examples: CodeExample[] = [\n    {\n      title: 'Default alert',\n      code: <Alert color=\"blue\">{alertText}</Alert>,\n    },\n    {\n      title: 'Alerts with icon',\n      code: (\n        <Alert color=\"red\" Icon={HiInformationCircle}>\n          {alertText}\n        </Alert>\n      ),\n    },\n    {\n      title: 'Dismissible alerts',\n      code: (\n        <Alert color=\"green\" onDismiss={() => alert('Alert dismissed!')}>\n          {alertText}\n        </Alert>\n      ),\n      codeStringifierOptions: { functionValue: (fn) => fn },\n    },\n    {\n      title: 'Rounded',\n      code: (\n        <Alert color=\"yellow\" rounded={false}>\n          {alertText}\n        </Alert>\n      ),\n    },\n    {\n      title: 'Border accent',\n      code: (\n        <Alert color=\"yellow\" withBorderAccent>\n          {alertText}\n        </Alert>\n      ),\n    },\n    {\n      title: 'Additional content',\n      code: (\n        <Alert\n          color=\"blue\"\n          additionalContent={\n            <>\n              <div className=\"mt-2 mb-4 text-sm text-blue-700 dark:text-blue-800\">\n                More info about this info alert goes here. This example text is going to run a bit longer so that you\n                can see how spacing within an alert works with this kind of content.\n              </div>\n              <div className=\"flex\">\n                <button\n                  type=\"button\"\n                  className=\"mr-2 inline-flex items-center rounded-lg bg-blue-700 px-3 py-1.5 text-center text-xs font-medium text-white hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-800 dark:hover:bg-blue-900\"\n                >\n                  <HiEye className=\"-ml-0.5 mr-2 h-4 w-4\" />\n                  View more\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"rounded-lg border border-blue-700 bg-transparent px-3 py-1.5 text-center text-xs font-medium text-blue-700 hover:bg-blue-800 hover:text-white focus:ring-4 focus:ring-blue-300 dark:border-blue-800 dark:text-blue-800 dark:hover:text-white\"\n                >\n                  Dismiss\n                </button>\n              </div>\n            </>\n          }\n          Icon={HiInformationCircle}\n        >\n          <h3 className=\"text-lg font-medium text-blue-700 dark:text-blue-800\">This is a info alert</h3>\n        </Alert>\n      ),\n    },\n    {\n      title: 'All options',\n      code: (\n        <Alert\n          color=\"green\"\n          rounded={false}\n          withBorderAccent\n          onDismiss={() => alert('Alert dismissed!')}\n          additionalContent={\n            <>\n              <div className=\"mt-2 mb-4 text-sm text-green-700 dark:text-green-800\">\n                More info about this info alert goes here. This example text is going to run a bit longer so that you\n                can see how spacing within an alert works with this kind of content.\n              </div>\n              <div className=\"flex\">\n                <button\n                  type=\"button\"\n                  className=\"mr-2 inline-flex items-center rounded-lg bg-green-700 px-3 py-1.5 text-center text-xs font-medium text-white hover:bg-green-800 focus:ring-4 focus:ring-green-300 dark:bg-green-800 dark:hover:bg-green-900\"\n                >\n                  <HiEye className=\"-ml-0.5 mr-2 h-4 w-4\" />\n                  View more\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"rounded-lg border border-green-700 bg-transparent px-3 py-1.5 text-center text-xs font-medium text-green-700 hover:bg-green-800 hover:text-white focus:ring-4 focus:ring-green-300 dark:border-green-800 dark:text-green-800 dark:hover:text-white\"\n                >\n                  Dismiss\n                </button>\n              </div>\n            </>\n          }\n          Icon={HiInformationCircle}\n        >\n          <h3 className=\"text-lg font-medium text-green-700 dark:text-green-800\">This is a info alert</h3>\n        </Alert>\n      ),\n    },\n  ];\n\n  return <DemoPage examples={examples} />;\n};\n\nexport default AlertsPage;\n","import { FC, ReactNode } from 'react';\nimport reactElementToJSXString, { Options } from 'react-element-to-jsx-string';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\n\nimport { Card } from '../components';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nexport type CodeExample = {\n  title: string;\n  code: ReactNode;\n  codeClassName?: string;\n  codeStringifierOptions?: Options;\n};\n\nexport type DemoPageProps = {\n  examples: CodeExample[];\n};\n\nexport const DemoPage: FC<DemoPageProps> = ({ examples }) => {\n  return (\n    <div className=\"mx-auto flex max-w-4xl flex-col gap-8 dark:text-white\">\n      {examples.map(({ title, code, codeClassName, codeStringifierOptions }, index) => (\n        <div key={index} className=\"flex flex-col gap-2\">\n          <span className=\"text-2xl font-bold\">{title}</span>\n          <Card className={codeClassName}>\n            {code}\n            <SyntaxHighlighter language=\"tsx\" style={dracula}>\n              {reactElementToJSXString(code, {\n                showFunctions: true,\n                functionValue: (fn) => fn.name,\n                sortProps: false,\n                useBooleanShorthandSyntax: false,\n                useFragmentShortSyntax: false,\n                ...codeStringifierOptions,\n              })}\n            </SyntaxHighlighter>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"names":["AlertsPage","alertText","className","examples","title","code","color","Icon","HiInformationCircle","onDismiss","alert","codeStringifierOptions","functionValue","fn","rounded","withBorderAccent","additionalContent","type","SyntaxHighlighter","tsx","DemoPage","map","index","codeClassName","language","style","dracula","reactElementToJSXString","showFunctions","name","sortProps","useBooleanShorthandSyntax","useFragmentShortSyntax"],"sourceRoot":""}