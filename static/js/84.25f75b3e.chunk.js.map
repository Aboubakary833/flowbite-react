{"version":3,"file":"static/js/84.25f75b3e.chunk.js","mappings":"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","sources":["pages/ButtonsPage.tsx","pages/DemoPage.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { HiOutlineArrowRight, HiShoppingCart } from 'react-icons/hi';\n\nimport { Button, Spinner } from '../components';\nimport { CodeExample, DemoPage } from './DemoPage';\n\nconst ButtonsPage: FC = () => {\n  const examples: CodeExample[] = [\n    {\n      title: 'Default button',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <Button>Default</Button>\n          <Button color=\"alternative\">Alternative</Button>\n          <Button color=\"dark\">Dark</Button>\n          <Button color=\"light\">Light</Button>\n          <Button color=\"green\">Green</Button>\n          <Button color=\"red\">Red</Button>\n          <Button color=\"yellow\">Yellow</Button>\n          <Button color=\"purple\">Purple</Button>\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Button pills',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <Button pill>Default</Button>\n          <Button color=\"alternative\" pill>\n            Alternative\n          </Button>\n          <Button color=\"dark\" pill>\n            Dark\n          </Button>\n          <Button color=\"light\" pill>\n            Light\n          </Button>\n          <Button color=\"green\" pill>\n            Green\n          </Button>\n          <Button color=\"red\" pill>\n            Red\n          </Button>\n          <Button color=\"yellow\" pill>\n            Yellow\n          </Button>\n          <Button color=\"purple\" pill>\n            Purple\n          </Button>\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Gradient Monochrome',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <Button gradientMonochrome=\"blue\">Blue</Button>\n          <Button gradientMonochrome=\"green\">Green</Button>\n          <Button gradientMonochrome=\"cyan\">Cyan</Button>\n          <Button gradientMonochrome=\"teal\">Teal</Button>\n          <Button gradientMonochrome=\"lime\">Lime</Button>\n          <Button gradientMonochrome=\"red\">Red</Button>\n          <Button gradientMonochrome=\"pink\">Pink</Button>\n          <Button gradientMonochrome=\"purple\">Purple</Button>\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Gradient duo-tone',\n      code: (\n        <div className=\"flex flex-wrap gap-2\">\n          <Button gradientDuoTone=\"purpleToBlue\">Purple to Blue</Button>\n          <Button gradientDuoTone=\"cyanToBlue\">Cyan to Blue</Button>\n          <Button gradientDuoTone=\"greenToBlue\">Green to Blue</Button>\n          <Button gradientDuoTone=\"purpleToPink\">Purple to Pink</Button>\n          <Button gradientDuoTone=\"pinkToOrange\">Pink to Orange</Button>\n          <Button gradientDuoTone=\"tealToLime\">Teal to Lime</Button>\n          <Button gradientDuoTone=\"redToYellow\">Red to Yellow</Button>\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Outline',\n      code: (\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <Button outline gradientDuoTone=\"purpleToBlue\">\n            Purple to Blue\n          </Button>\n          <Button outline gradientDuoTone=\"cyanToBlue\">\n            Cyan to Blue\n          </Button>\n          <Button outline gradientDuoTone=\"greenToBlue\">\n            Green to Blue\n          </Button>\n          <Button outline gradientDuoTone=\"purpleToPink\">\n            Purple to Pink\n          </Button>\n          <Button outline gradientDuoTone=\"pinkToOrange\">\n            Pink to Orange\n          </Button>\n          <Button outline gradientDuoTone=\"tealToLime\">\n            Teal to Lime\n          </Button>\n          <Button outline gradientDuoTone=\"redToYellow\">\n            Red to Yellow\n          </Button>\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Button sizes',\n      code: (\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <Button size=\"xs\">Extra small</Button>\n          <Button size=\"sm\">Small</Button>\n          <Button size=\"md\">Base</Button>\n          <Button size=\"lg\">Large</Button>\n          <Button size=\"xl\">Extra large</Button>\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Buttons with icon',\n      code: (\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <Button>\n            <HiShoppingCart className=\"mr-2 h-5 w-5\" />\n            Buy now\n          </Button>\n          <Button>\n            Choose plan\n            <HiOutlineArrowRight className=\"ml-2 h-5 w-5\" />\n          </Button>\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Button with label',\n      code: <Button label=\"2\">Messages</Button>,\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Icon buttons',\n      code: (\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <Button icon={HiOutlineArrowRight} />\n          <Button icon={HiOutlineArrowRight} pill />\n          <Button icon={HiOutlineArrowRight} outline />\n          <Button icon={HiOutlineArrowRight} pill outline />\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Loader',\n      code: (\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <Button>\n            <Spinner className=\"mr-3\" size=\"sm\" light />\n            Loading ...\n          </Button>\n          <Button outline>\n            <Spinner className=\"mr-3\" size=\"sm\" light />\n            Loading ...\n          </Button>\n        </div>\n      ),\n      codeClassName: 'dark:!bg-gray-900',\n    },\n    {\n      title: 'Disabled',\n      code: <Button disabled>Disabled button</Button>,\n      codeClassName: 'dark:!bg-gray-900',\n    },\n  ];\n\n  return <DemoPage examples={examples} />;\n};\n\nexport default ButtonsPage;\n","import { FC, ReactNode } from 'react';\nimport reactElementToJSXString, { Options } from 'react-element-to-jsx-string';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport tsx from 'react-syntax-highlighter/dist/esm/languages/prism/tsx';\n\nimport { Card } from '../components';\n\nSyntaxHighlighter.registerLanguage('tsx', tsx);\n\nexport type CodeExample = {\n  title: string;\n  code: ReactNode;\n  codeClassName?: string;\n  codeStringifierOptions?: Options;\n};\n\nexport type DemoPageProps = {\n  examples: CodeExample[];\n};\n\nexport const DemoPage: FC<DemoPageProps> = ({ examples }) => {\n  return (\n    <div className=\"mx-auto flex max-w-4xl flex-col gap-8 dark:text-white\">\n      {examples.map(({ title, code, codeClassName, codeStringifierOptions }, index) => (\n        <div key={index} className=\"flex flex-col gap-2\">\n          <span className=\"text-2xl font-bold\">{title}</span>\n          <Card className={codeClassName}>\n            {code}\n            <SyntaxHighlighter language=\"tsx\" style={dracula}>\n              {reactElementToJSXString(code, {\n                showFunctions: true,\n                functionValue: (fn) => fn.name,\n                sortProps: false,\n                useBooleanShorthandSyntax: false,\n                useFragmentShortSyntax: false,\n                ...codeStringifierOptions,\n              })}\n            </SyntaxHighlighter>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"names":["ButtonsPage","examples","title","code","className","color","codeClassName","pill","gradientMonochrome","gradientDuoTone","outline","size","label","icon","HiOutlineArrowRight","light","disabled","SyntaxHighlighter","tsx","DemoPage","map","index","codeStringifierOptions","language","style","dracula","reactElementToJSXString","showFunctions","functionValue","fn","name","sortProps","useBooleanShorthandSyntax","useFragmentShortSyntax"],"sourceRoot":""}